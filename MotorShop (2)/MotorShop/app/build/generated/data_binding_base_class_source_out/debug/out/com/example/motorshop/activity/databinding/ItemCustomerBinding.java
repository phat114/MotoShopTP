// Generated by view binder compiler. Do not edit!
package com.example.motorshop.activity.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.example.motorshop.activity.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemCustomerBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView tvAddCT;

  @NonNull
  public final TextView tvDateCT;

  @NonNull
  public final TextView tvIdCT;

  @NonNull
  public final TextView tvIdenIdCT;

  @NonNull
  public final TextView tvNameCT;

  @NonNull
  public final TextView tvPassCT;

  @NonNull
  public final TextView tvPhoneCT;

  private ItemCustomerBinding(@NonNull LinearLayout rootView, @NonNull TextView tvAddCT,
      @NonNull TextView tvDateCT, @NonNull TextView tvIdCT, @NonNull TextView tvIdenIdCT,
      @NonNull TextView tvNameCT, @NonNull TextView tvPassCT, @NonNull TextView tvPhoneCT) {
    this.rootView = rootView;
    this.tvAddCT = tvAddCT;
    this.tvDateCT = tvDateCT;
    this.tvIdCT = tvIdCT;
    this.tvIdenIdCT = tvIdenIdCT;
    this.tvNameCT = tvNameCT;
    this.tvPassCT = tvPassCT;
    this.tvPhoneCT = tvPhoneCT;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemCustomerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemCustomerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_customer, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemCustomerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.tvAddCT;
      TextView tvAddCT = rootView.findViewById(id);
      if (tvAddCT == null) {
        break missingId;
      }

      id = R.id.tvDateCT;
      TextView tvDateCT = rootView.findViewById(id);
      if (tvDateCT == null) {
        break missingId;
      }

      id = R.id.tvIdCT;
      TextView tvIdCT = rootView.findViewById(id);
      if (tvIdCT == null) {
        break missingId;
      }

      id = R.id.tvIdenIdCT;
      TextView tvIdenIdCT = rootView.findViewById(id);
      if (tvIdenIdCT == null) {
        break missingId;
      }

      id = R.id.tvNameCT;
      TextView tvNameCT = rootView.findViewById(id);
      if (tvNameCT == null) {
        break missingId;
      }

      id = R.id.tvPassCT;
      TextView tvPassCT = rootView.findViewById(id);
      if (tvPassCT == null) {
        break missingId;
      }

      id = R.id.tvPhoneCT;
      TextView tvPhoneCT = rootView.findViewById(id);
      if (tvPhoneCT == null) {
        break missingId;
      }

      return new ItemCustomerBinding((LinearLayout) rootView, tvAddCT, tvDateCT, tvIdCT, tvIdenIdCT,
          tvNameCT, tvPassCT, tvPhoneCT);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
